"""init migration

Revision ID: 50ccbc80fd47
Revises: 
Create Date: 2023-06-20 20:02:21.370492

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '50ccbc80fd47'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('strains',
    sa.Column('image_filename', sa.String(length=128), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=128), nullable=True),
    sa.Column('delta_nine_concentration', sa.Float(), nullable=True),
    sa.Column('cbd_concentration', sa.Float(), nullable=True),
    sa.Column('terpene_profile', sa.String(length=128), nullable=True),
    sa.Column('effects', sa.String(length=128), nullable=True),
    sa.Column('uses', sa.String(length=128), nullable=True),
    sa.Column('flavor', sa.String(length=128), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('verification_token', sa.String(length=40), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('token_generated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('stores',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('location', sa.String(length=128), nullable=False),
    sa.Column('operating_hours', sa.String(length=128), nullable=False),
    sa.Column('owner_id', sa.String(length=60), nullable=False),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('role_id', sa.String(length=60), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_strains',
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('strain_id', sa.String(length=60), nullable=False),
    sa.ForeignKeyConstraint(['strain_id'], ['strains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'strain_id')
    )
    op.create_table('store_strains',
    sa.Column('store_id', sa.String(length=60), nullable=False),
    sa.Column('strain_id', sa.String(length=60), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.ForeignKeyConstraint(['strain_id'], ['strains.id'], ),
    sa.PrimaryKeyConstraint('store_id', 'strain_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('store_strains')
    op.drop_table('user_strains')
    op.drop_table('user_roles')
    op.drop_table('stores')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('strains')
    op.drop_table('roles')
    # ### end Alembic commands ###
